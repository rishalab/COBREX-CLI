digraph cluster {
	graph [label=test]
	node [color=lightblue shape=box style=filled]
	1 [label="COMPUTE QT-MEAT = FUNCTION RANDOM ( 1 ) * 10
"]
	3 [label="IF NEED = 1 AND QT-MEAT > 0
"]
	4 [label="IF MONEY > PR-MEAT AND BAG < MAX-CAP
"]
	5 [label="SUBTRACT 1 FROM QT-MEAT
"]
	4 -> 5 [label=true]
	3 -> 4 [label=true]
	1 -> 3 [label="perform-exit"]
	node [color=lightgrey shape=diamond style=filled]
	"QT-MEAT" [label="QT-MEAT"]
	"QT-MEAT" -> 1 [label=start]
	node [color=lightblue shape=box style=filled]
	12 [label="COMPUTE NEED = FUNCTION RANDOM ( 1 ) * 2
"]
	18 [label="IF NEED = 1 AND QT-VEG > 0
"]
	19 [label="IF NEED = 1 AND QT-MEAT > 0
"]
	20 [label="IF NEED = 1 AND QT-BREAD > 0
"]
	21 [label="IF NEED = 1 AND QT-MILK > 0
"]
	22 [label="IF NEED = 1 AND QT-FRUIT > 0
"]
	21 -> 22 [label=true]
	20 -> 21 [label=true]
	19 -> 20 [label=true]
	18 -> 19 [label=true]
	12 -> 18 [label="perform-exit"]
	node [color=lightgrey shape=diamond style=filled]
	NEED [label=NEED]
	NEED -> 12 [label=start]
	node [color=lightblue shape=box style=filled]
	34 [label="COMPUTE PR-BREAD = FUNCTION RANDOM ( 1 ) * 10 + 1
"]
	36 [label="IF NEED = 1 AND QT-BREAD > 0
"]
	37 [label="IF MONEY > PR-BREAD AND BAG < MAX-CAP
"]
	38 [label="COMPUTE MONEY = MONEY - PR-BREAD
"]
	37 -> 38 [label=true]
	36 -> 37 [label=true]
	34 -> 36 [label="perform-exit"]
	node [color=lightgrey shape=diamond style=filled]
	"PR-BREAD" [label="PR-BREAD"]
	"PR-BREAD" -> 34 [label=start]
	node [color=lightblue shape=box style=filled]
	47 [label="COMPUTE QT-FRUIT = FUNCTION RANDOM ( 1 ) * 10
"]
	49 [label="IF NEED = 1 AND QT-FRUIT > 0
"]
	50 [label="IF MONEY > PR-FRUIT AND BAG < MAX-CAP
"]
	51 [label="SUBTRACT 1 FROM QT-FRUIT
"]
	50 -> 51 [label=true]
	49 -> 50 [label=true]
	47 -> 49 [label="perform-exit"]
	node [color=lightgrey shape=diamond style=filled]
	"QT-FRUIT" [label="QT-FRUIT"]
	"QT-FRUIT" -> 47 [label=start]
	node [color=lightblue shape=box style=filled]
	64 [label="COMPUTE QT-VEG = FUNCTION RANDOM ( 1 ) * 10
"]
	66 [label="IF NEED = 1 AND QT-VEG > 0
"]
	67 [label="IF MONEY > PR-VEG AND BAG < MAX-CAP
"]
	68 [label="SUBTRACT 1 FROM QT-VEG
"]
	67 -> 68 [label=true]
	66 -> 67 [label=true]
	64 -> 66 [label="perform-exit"]
	node [color=lightgrey shape=diamond style=filled]
	"QT-VEG" [label="QT-VEG"]
	"QT-VEG" -> 64 [label=start]
	node [color=lightblue shape=box style=filled]
	73 [label="COMPUTE QT-MILK = FUNCTION RANDOM ( 1 ) * 10
"]
	75 [label="IF NEED = 1 AND QT-MILK > 0
"]
	76 [label="IF MONEY > PR-MILK AND BAG < MAX-CAP
"]
	77 [label="SUBTRACT 1 FROM QT-MILK
"]
	76 -> 77 [label=true]
	75 -> 76 [label=true]
	73 -> 75 [label="perform-exit"]
	node [color=lightgrey shape=diamond style=filled]
	"QT-MILK" [label="QT-MILK"]
	"QT-MILK" -> 73 [label=start]
	node [color=lightblue shape=box style=filled]
	88 [label="COMPUTE PR-MEAT = FUNCTION RANDOM ( 1 ) * 10 + 5
"]
	90 [label="IF NEED = 1 AND QT-MEAT > 0
"]
	91 [label="IF MONEY > PR-MEAT AND BAG < MAX-CAP
"]
	92 [label="COMPUTE MONEY = MONEY - PR-MEAT
"]
	91 -> 92 [label=true]
	90 -> 91 [label=true]
	88 -> 90 [label="perform-exit"]
	node [color=lightgrey shape=diamond style=filled]
	"PR-MEAT" [label="PR-MEAT"]
	"PR-MEAT" -> 88 [label=start]
	node [color=lightblue shape=box style=filled]
	99 [label="MOVE MONEY TO REST
"]
	node [color=lightgrey shape=diamond style=filled]
	REST [label=REST]
	REST -> 99 [label=start]
	node [color=lightblue shape=box style=filled]
	113 [label="IF NEED = 1 AND QT-VEG > 0
"]
	114 [label="IF MONEY > PR-VEG AND BAG < MAX-CAP
"]
	115 [label="ADD 1 TO BAG
"]
	116 [label="IF NEED = 1 AND QT-MEAT > 0
"]
	117 [label="IF MONEY > PR-MEAT AND BAG < MAX-CAP
"]
	118 [label="ADD 1 TO BAG
"]
	119 [label="IF NEED = 1 AND QT-BREAD > 0
"]
	120 [label="IF MONEY > PR-BREAD AND BAG < MAX-CAP
"]
	121 [label="ADD 1 TO BAG
"]
	122 [label="IF NEED = 1 AND QT-MILK > 0
"]
	123 [label="IF MONEY > PR-MILK AND BAG < MAX-CAP
"]
	124 [label="ADD 1 TO BAG
"]
	125 [label="IF NEED = 1 AND QT-FRUIT > 0
"]
	126 [label="IF MONEY > PR-FRUIT AND BAG < MAX-CAP
"]
	127 [label="ADD 1 TO BAG
"]
	128 [label="IF MONEY <= 0 OR BAG >= MAX-CAP
"]
	129 [label="DISPLAY \"NB OF PRODUCTS:\" BAG
"]
	128 -> 129 [label=true]
	127 -> 128 [label="sequential next"]
	126 -> 127 [label=true]
	125 -> 126 [label=true]
	124 -> 125 [label="sequential next"]
	123 -> 124 [label=true]
	122 -> 123 [label=true]
	121 -> 122 [label="sequential next"]
	120 -> 121 [label=true]
	119 -> 120 [label=true]
	118 -> 119 [label="sequential next"]
	117 -> 118 [label=true]
	116 -> 117 [label=true]
	115 -> 116 [label="sequential next"]
	114 -> 115 [label=true]
	113 -> 114 [label=true]
	node [color=lightgrey shape=diamond style=filled]
	BAG [label=BAG]
	BAG -> 113 [label=start]
	node [color=lightblue shape=box style=filled]
	143 [label="COMPUTE PR-FRUIT = FUNCTION RANDOM ( 1 ) * 10 + 1
"]
	145 [label="IF NEED = 1 AND QT-FRUIT > 0
"]
	146 [label="IF MONEY > PR-FRUIT AND BAG < MAX-CAP
"]
	147 [label="COMPUTE MONEY = MONEY - PR-FRUIT
"]
	146 -> 147 [label=true]
	145 -> 146 [label=true]
	143 -> 145 [label="perform-exit"]
	node [color=lightgrey shape=diamond style=filled]
	"PR-FRUIT" [label="PR-FRUIT"]
	"PR-FRUIT" -> 143 [label=start]
	node [color=lightblue shape=box style=filled]
	160 [label="IF NEED = 1 AND QT-VEG > 0
"]
	161 [label="IF MONEY > PR-VEG AND BAG < MAX-CAP
"]
	162 [label="COMPUTE MONEY = MONEY - PR-VEG
"]
	163 [label="IF NEED = 1 AND QT-MEAT > 0
"]
	164 [label="IF MONEY > PR-MEAT AND BAG < MAX-CAP
"]
	165 [label="COMPUTE MONEY = MONEY - PR-MEAT
"]
	166 [label="IF NEED = 1 AND QT-BREAD > 0
"]
	167 [label="IF MONEY > PR-BREAD AND BAG < MAX-CAP
"]
	168 [label="COMPUTE MONEY = MONEY - PR-BREAD
"]
	169 [label="IF NEED = 1 AND QT-MILK > 0
"]
	170 [label="IF MONEY > PR-MILK AND BAG < MAX-CAP
"]
	171 [label="COMPUTE MONEY = MONEY - PR-MILK
"]
	172 [label="IF NEED = 1 AND QT-FRUIT > 0
"]
	173 [label="IF MONEY > PR-FRUIT AND BAG < MAX-CAP
"]
	174 [label="COMPUTE MONEY = MONEY - PR-FRUIT
"]
	175 [label="IF MONEY <= 0 OR BAG >= MAX-CAP
"]
	176 [label="MOVE MONEY TO REST
"]
	177 [label="DISPLAY \"REST:\" MONEY
"]
	176 -> 177 [label="sequential next"]
	175 -> 176 [label=true]
	174 -> 175 [label="sequential next"]
	173 -> 174 [label=true]
	172 -> 173 [label=true]
	171 -> 172 [label="sequential next"]
	170 -> 171 [label=true]
	169 -> 170 [label=true]
	168 -> 169 [label="sequential next"]
	167 -> 168 [label=true]
	166 -> 167 [label=true]
	165 -> 166 [label="sequential next"]
	164 -> 165 [label=true]
	163 -> 164 [label=true]
	162 -> 163 [label="sequential next"]
	161 -> 162 [label=true]
	160 -> 161 [label=true]
	node [color=lightgrey shape=diamond style=filled]
	MONEY [label=MONEY]
	MONEY -> 160 [label=start]
	node [color=lightblue shape=box style=filled]
	191 [label="IF NEED = 1 AND QT-VEG > 0
"]
	192 [label="IF MONEY > PR-VEG AND BAG < MAX-CAP
"]
	193 [label="IF NEED = 1 AND QT-MEAT > 0
"]
	194 [label="IF MONEY > PR-MEAT AND BAG < MAX-CAP
"]
	195 [label="IF NEED = 1 AND QT-BREAD > 0
"]
	196 [label="IF MONEY > PR-BREAD AND BAG < MAX-CAP
"]
	197 [label="IF NEED = 1 AND QT-MILK > 0
"]
	198 [label="IF MONEY > PR-MILK AND BAG < MAX-CAP
"]
	199 [label="IF NEED = 1 AND QT-FRUIT > 0
"]
	200 [label="IF MONEY > PR-FRUIT AND BAG < MAX-CAP
"]
	201 [label="IF MONEY <= 0 OR BAG >= MAX-CAP
"]
	200 -> 201 [label=true]
	199 -> 200 [label=true]
	198 -> 199 [label=true]
	197 -> 198 [label=true]
	196 -> 197 [label=true]
	195 -> 196 [label=true]
	194 -> 195 [label=true]
	193 -> 194 [label=true]
	192 -> 193 [label=true]
	191 -> 192 [label=true]
	node [color=lightgrey shape=diamond style=filled]
	"MAX-CAP" [label="MAX-CAP"]
	"MAX-CAP" -> 191 [label=start]
	node [color=lightblue shape=box style=filled]
	215 [label="IF OP = 1
"]
	node [color=lightgrey shape=diamond style=filled]
	OP [label=OP]
	OP -> 215 [label=start]
	node [color=lightblue shape=box style=filled]
	218 [label="COMPUTE QT-BREAD = FUNCTION RANDOM ( 1 ) * 10
"]
	220 [label="IF NEED = 1 AND QT-BREAD > 0
"]
	221 [label="IF MONEY > PR-BREAD AND BAG < MAX-CAP
"]
	222 [label="SUBTRACT 1 FROM QT-BREAD
"]
	221 -> 222 [label=true]
	220 -> 221 [label=true]
	218 -> 220 [label="perform-exit"]
	node [color=lightgrey shape=diamond style=filled]
	"QT-BREAD" [label="QT-BREAD"]
	"QT-BREAD" -> 218 [label=start]
	node [color=lightblue shape=box style=filled]
	231 [label="COMPUTE PR-MILK = FUNCTION RANDOM ( 1 ) * 10 + 2
"]
	233 [label="IF NEED = 1 AND QT-MILK > 0
"]
	234 [label="IF MONEY > PR-MILK AND BAG < MAX-CAP
"]
	235 [label="COMPUTE MONEY = MONEY - PR-MILK
"]
	234 -> 235 [label=true]
	233 -> 234 [label=true]
	231 -> 233 [label="perform-exit"]
	node [color=lightgrey shape=diamond style=filled]
	"PR-MILK" [label="PR-MILK"]
	"PR-MILK" -> 231 [label=start]
	node [color=lightblue shape=box style=filled]
	246 [label="COMPUTE PR-VEG = FUNCTION RANDOM ( 1 ) * 10 + 3
"]
	248 [label="IF NEED = 1 AND QT-VEG > 0
"]
	249 [label="IF MONEY > PR-VEG AND BAG < MAX-CAP
"]
	250 [label="COMPUTE MONEY = MONEY - PR-VEG
"]
	249 -> 250 [label=true]
	248 -> 249 [label=true]
	246 -> 248 [label="perform-exit"]
	node [color=lightgrey shape=diamond style=filled]
	"PR-VEG" [label="PR-VEG"]
	"PR-VEG" -> 246 [label=start]
}
