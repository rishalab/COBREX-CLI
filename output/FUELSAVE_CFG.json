{
  "nodes": [
    { "id": "start", "data": { "label": "start" } },
    { "id": "1", "data": { "label": "display-title-screen .\n \n" } },
    { "id": "2", "data": { "label": "display spaces\n" } },
    {
      "id": "3",
      "data": {
        "label": "display \"**** % FUEL SAVINGS CALCULATOR UTILITY BEGINS ****\"\n"
      }
    },
    {
      "id": "4",
      "data": { "label": "display \"Written by, Clifford A. Chipman, EMIT\"\n" }
    },
    { "id": "5", "data": { "label": "display \"June 17, 2020\"\n" } },
    { "id": "6", "data": { "label": "display spaces\n" } },
    {
      "id": "7",
      "data": { "label": "display \"in Enterprise COBOL v6.3 for z/OS\"\n" }
    },
    { "id": "8", "data": { "label": "display spaces\n" } },
    {
      "id": "9",
      "data": {
        "label": "display \"Enter zero for any parameter to end the program.\"\n"
      }
    },
    { "id": "10", "data": { "label": "display spaces\n" } },
    { "id": "11", "data": { "label": "old-eff-data-entry .\n \n" } },
    {
      "id": "12",
      "data": {
        "label": "display \"Enter old efficiency %: \" with no advancing\n"
      }
    },
    { "id": "13", "data": { "label": "accept old-eff-in\n" } },
    {
      "id": "14",
      "data": {
        "label": "if function test-numval ( old-eff-in ) IS NOT EQUAL ZERO\n"
      }
    },
    {
      "id": "15",
      "data": { "label": "display \"Old Efficiency\" not-numeric\n" }
    },
    { "id": "18", "data": { "label": "display spaces\n" } },
    { "id": "19", "data": { "label": "go to old-eff-data-entry\n" } },
    {
      "id": "17",
      "data": { "label": "compute oldeff = function numval ( old-eff-in )\n" }
    },
    { "id": "16", "data": { "label": "if oldeff = 0\n" } },
    { "id": "22", "data": { "label": "go to end-program\n" } },
    { "id": "82", "data": { "label": "end-program .\n \n" } },
    { "id": "83", "data": { "label": "display spaces\n" } },
    {
      "id": "84",
      "data": {
        "label": "display \"***** % FUEL SAVINGS CALCULATOR UTILITY ENDS *****\"\n"
      }
    },
    { "id": "85", "data": { "label": "display spaces\n" } },
    { "id": "86", "data": { "label": "stop run\n" } },
    { "id": "23", "data": { "label": "if oldeff < min-val\n" } },
    { "id": "26", "data": { "label": "display quantity-too-small\n" } },
    { "id": "29", "data": { "label": "display spaces\n" } },
    { "id": "30", "data": { "label": "go to old-eff-data-entry\n" } },
    { "id": "27", "data": { "label": "if oldeff > max-val\n" } },
    { "id": "32", "data": { "label": "display quantity-too-much\n" } },
    { "id": "35", "data": { "label": "display spaces\n" } },
    { "id": "36", "data": { "label": "go to old-eff-data-entry\n" } },
    { "id": "33", "data": { "label": "new-eff-data-entry .\n \n" } },
    {
      "id": "38",
      "data": {
        "label": "display \"Enter new efficiency %: \" with no advancing\n"
      }
    },
    { "id": "39", "data": { "label": "accept new-eff-in\n" } },
    {
      "id": "40",
      "data": {
        "label": "if function test-numval ( new-eff-in ) IS NOT EQUAL ZERO\n"
      }
    },
    {
      "id": "41",
      "data": { "label": "display \"New Efficiency\" not-numeric\n" }
    },
    { "id": "44", "data": { "label": "display spaces\n" } },
    { "id": "45", "data": { "label": "go to new-eff-data-entry\n" } },
    {
      "id": "43",
      "data": { "label": "compute neweff = function numval ( new-eff-in )\n" }
    },
    { "id": "42", "data": { "label": "if neweff = 0\n" } },
    { "id": "48", "data": { "label": "go to end-program\n" } },
    { "id": "49", "data": { "label": "if neweff < min-val\n" } },
    { "id": "52", "data": { "label": "display quantity-too-small\n" } },
    { "id": "55", "data": { "label": "go to new-eff-data-entry\n" } },
    { "id": "53", "data": { "label": "if neweff > max-val\n" } },
    { "id": "57", "data": { "label": "display quantity-too-much\n" } },
    { "id": "60", "data": { "label": "go to new-eff-data-entry\n" } },
    { "id": "58", "data": { "label": "if neweff = oldeff\n" } },
    {
      "id": "62",
      "data": { "label": "display quantities-equal1 quantities-equal2\n" }
    },
    { "id": "65", "data": { "label": "go to end-program\n" } },
    { "id": "63", "data": { "label": "if neweff < oldeff\n" } },
    {
      "id": "67",
      "data": { "label": "display quantity-lower1 quantity-lower2\n" }
    },
    { "id": "70", "data": { "label": "go to end-program\n" } },
    { "id": "68", "data": { "label": "calculate-it .\n \n" } },
    {
      "id": "72",
      "data": { "label": "subtract oldeff from neweff giving numerator\n" }
    },
    {
      "id": "73",
      "data": { "label": "divide numerator by neweff giving pcteff rounded\n" }
    },
    { "id": "74", "data": { "label": "multiply 100 by pcteff\n" } },
    { "id": "75", "data": { "label": "move oldeff to old-eff-out\n" } },
    { "id": "76", "data": { "label": "move neweff to new-eff-out\n" } },
    { "id": "77", "data": { "label": "move pcteff to pct-eff-out\n" } },
    { "id": "78", "data": { "label": "disp-result .\n \n" } },
    {
      "id": "79",
      "data": { "label": "display \"Old Efficiency: \" old-eff-out \"%\"\n" }
    },
    {
      "id": "80",
      "data": { "label": "display \"New Efficiency: \" new-eff-out \"%\"\n" }
    },
    {
      "id": "81",
      "data": { "label": "display \"Fuel Savings: \" pct-eff-out \"%\"\n" }
    }
  ],
  "edges": [
    { "id": "1", "source": "start", "target": "1", "label": "start" },
    { "id": "2", "source": "1", "target": "2", "label": "sequential next" },
    { "id": "3", "source": "2", "target": "3", "label": "sequential next" },
    { "id": "4", "source": "3", "target": "4", "label": "sequential next" },
    { "id": "5", "source": "4", "target": "5", "label": "sequential next" },
    { "id": "6", "source": "5", "target": "6", "label": "sequential next" },
    { "id": "7", "source": "6", "target": "7", "label": "sequential next" },
    { "id": "8", "source": "7", "target": "8", "label": "sequential next" },
    { "id": "9", "source": "8", "target": "9", "label": "sequential next" },
    { "id": "10", "source": "9", "target": "10", "label": "sequential next" },
    { "id": "11", "source": "10", "target": "11", "label": "sequential next" },
    { "id": "12", "source": "11", "target": "12", "label": "sequential next" },
    { "id": "13", "source": "12", "target": "13", "label": "sequential next" },
    { "id": "14", "source": "13", "target": "14", "label": "sequential next" },
    { "id": "15", "source": "14", "target": "15", "label": "true" },
    { "id": "16", "source": "15", "target": "18", "label": "sequential next" },
    { "id": "17", "source": "18", "target": "19", "label": "sequential next" },
    { "id": "18", "source": "19", "target": "11", "label": "procedure call" },
    { "id": "19", "source": "14", "target": "17", "label": "false" },
    { "id": "20", "source": "17", "target": "16", "label": "sequential next" },
    { "id": "21", "source": "16", "target": "22", "label": "true" },
    { "id": "22", "source": "22", "target": "82", "label": "procedure call" },
    { "id": "23", "source": "82", "target": "83", "label": "sequential next" },
    { "id": "24", "source": "83", "target": "84", "label": "sequential next" },
    { "id": "25", "source": "84", "target": "85", "label": "sequential next" },
    { "id": "26", "source": "85", "target": "86", "label": "sequential next" },
    { "id": "27", "source": "16", "target": "23", "label": "false" },
    { "id": "28", "source": "23", "target": "26", "label": "true" },
    { "id": "29", "source": "26", "target": "29", "label": "sequential next" },
    { "id": "30", "source": "29", "target": "30", "label": "sequential next" },
    { "id": "31", "source": "30", "target": "11", "label": "procedure call" },
    { "id": "32", "source": "23", "target": "27", "label": "false" },
    { "id": "33", "source": "27", "target": "32", "label": "true" },
    { "id": "34", "source": "32", "target": "35", "label": "sequential next" },
    { "id": "35", "source": "35", "target": "36", "label": "sequential next" },
    { "id": "36", "source": "36", "target": "11", "label": "procedure call" },
    { "id": "37", "source": "27", "target": "33", "label": "false" },
    { "id": "38", "source": "33", "target": "38", "label": "sequential next" },
    { "id": "39", "source": "38", "target": "39", "label": "sequential next" },
    { "id": "40", "source": "39", "target": "40", "label": "sequential next" },
    { "id": "41", "source": "40", "target": "41", "label": "true" },
    { "id": "42", "source": "41", "target": "44", "label": "sequential next" },
    { "id": "43", "source": "44", "target": "45", "label": "sequential next" },
    { "id": "44", "source": "45", "target": "33", "label": "procedure call" },
    { "id": "45", "source": "40", "target": "43", "label": "false" },
    { "id": "46", "source": "43", "target": "42", "label": "sequential next" },
    { "id": "47", "source": "42", "target": "48", "label": "true" },
    { "id": "48", "source": "48", "target": "82", "label": "procedure call" },
    { "id": "49", "source": "42", "target": "49", "label": "false" },
    { "id": "50", "source": "49", "target": "52", "label": "true" },
    { "id": "51", "source": "52", "target": "55", "label": "sequential next" },
    { "id": "52", "source": "55", "target": "33", "label": "procedure call" },
    { "id": "53", "source": "49", "target": "53", "label": "false" },
    { "id": "54", "source": "53", "target": "57", "label": "true" },
    { "id": "55", "source": "57", "target": "60", "label": "sequential next" },
    { "id": "56", "source": "60", "target": "33", "label": "procedure call" },
    { "id": "57", "source": "53", "target": "58", "label": "false" },
    { "id": "58", "source": "58", "target": "62", "label": "true" },
    { "id": "59", "source": "62", "target": "65", "label": "sequential next" },
    { "id": "60", "source": "65", "target": "82", "label": "procedure call" },
    { "id": "61", "source": "58", "target": "63", "label": "false" },
    { "id": "62", "source": "63", "target": "67", "label": "true" },
    { "id": "63", "source": "67", "target": "70", "label": "sequential next" },
    { "id": "64", "source": "70", "target": "82", "label": "procedure call" },
    { "id": "65", "source": "63", "target": "68", "label": "false" },
    { "id": "66", "source": "68", "target": "72", "label": "sequential next" },
    { "id": "67", "source": "72", "target": "73", "label": "sequential next" },
    { "id": "68", "source": "73", "target": "74", "label": "sequential next" },
    { "id": "69", "source": "74", "target": "75", "label": "sequential next" },
    { "id": "70", "source": "75", "target": "76", "label": "sequential next" },
    { "id": "71", "source": "76", "target": "77", "label": "sequential next" },
    { "id": "72", "source": "77", "target": "78", "label": "sequential next" },
    { "id": "73", "source": "78", "target": "79", "label": "sequential next" },
    { "id": "74", "source": "79", "target": "80", "label": "sequential next" },
    { "id": "75", "source": "80", "target": "81", "label": "sequential next" },
    { "id": "76", "source": "81", "target": "82", "label": "sequential next" }
  ]
}
